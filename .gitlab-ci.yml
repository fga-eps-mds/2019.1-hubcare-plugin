image: node:carbon-alpine

cache:
  paths:
  - node_modules/

stages:
  - test
  - release
  - publish

# Stage I
# Testing Phase:
# This is where the main code is tested.
# Other options like code coverage, etc are also written in this phase
test:
  stage: test
  script:
   - npm install
   - npm test
   - ./node_modules/.bin/codecov codecov --token="$CODECOV_TOKEN"

# Stage II
# Release Phase
# In this phase, we package our code using docker
.release:
  stage: release
  image: docker:latest
  services:
    - docker:dind
  script:
    # Build our image using docker
    - docker build . -t registry.gitlab.com/cjjcastro/2019-1-hubcare-plugin:$DOCKERTAG

    # Configure container registry to push using docker
    - docker login -u "$DOCKERLOGIN" -p "$DOCKERPASSWORD" registry.gitlab.com

    # Push the image using docker
    - docker push registry.gitlab.com/cjjcastro/2019-1-hubcare-plugin:$DOCKERTAG

    # The tag, only master indicates that whenever code is pushed to master branch,
    # only then run the pipeline

release_production:
  extends: .release
  environment: production
  only:
    - master

release_development:
  extends: .release
  environment: development
  only: 
    - devel

# Stage III
# Publish Phase
# In this phase, we publishing the plugin in chrome extension
publish:
  stage: publish
  before_script:
    - npm install
    - apk add curl
    - "sed -i \"s/CLIENT_ID: ''/CLIENT_ID: '$GITHUB_CLIENT_ID'/g\" app/scripts/constants.js"
    - "sed -i \"s/CLIENT_SECRET: ''/CLIENT_SECRET: '$GITHUB_CLIENT_SECRET'/g\" app/scripts/constants.js"
  script:
    - npm run build chrome
    - "./node_modules/.bin/webstore upload --source packages/hubcare.*.chrome.zip --extension-id $EXTENSION_ID --client-id $CLIENT_ID --client-secret $CLIENT_SECRET --refresh-token $REFRESH_TOKEN"
    - "./node_modules/.bin/webstore publish --extension-id $EXTENSION_ID --client-id $CLIENT_ID --client-secret $CLIENT_SECRET --refresh-token $REFRESH_TOKEN"
  only:
    - master
